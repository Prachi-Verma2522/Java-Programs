 java.util.*;
import static java.lang.System.exit;

class Node{
    int data;
    Node next;
    Node(int d){
        data = d;
        next = null;
    }
}

public class Main
{
    Node head;
    int size;
    Main(){
        size =0;
        head=null;
    }
    int size(){
        return size;
    }
    boolean isEmpty(){
        return(head==null);
    }
    int push(int x){
        Node temp = new Node(x);
        temp.next=head;
        head= temp;
        size++;
        return x;
    }
    int pop(){
        if(head==null){
            return Integer.MAX_VALUE;
        }
        int res = head.data;
        head = head.next;
        size--;
        return res;
    }
    int peek(){
        if(head==null){
            return Integer.MAX_VALUE;
        }
        return head.data;
    }
    void display()
    {
        // check for stack underflow
        if (head == null) {
            System.out.printf("Stack Underflow");
            exit(1);
        }
        else {
            Node temp = head;
            while (temp != null) {
 
                // print node data
                System.out.printf("%d->", temp.data);
 
                // assign temp link to temp
                temp = temp.next;
            }
        }
    }
        
	public static void main(String[] args) {
		System.out.println("```````````````````````");
		Main m = new Main();
		m.push(1);
		m.push(2);
		m.push(3);
		m.push(4);
		m.push(5);
		System.out.println(m.peek());
	/*	m.pop();
		m.pop();
		m.pop();
		m.pop();
		m.pop();*/
		m.display();
	  // System.out.println(m.pop()); // underflow

	}
}

